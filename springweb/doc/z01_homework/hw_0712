2022-07-12
1. 스프링 초기화면 요청값 처리하는 방식과 모델 처리방식을 기술하세요
- 요청값 처리
	query string: 요청key=요청value -> 서버단(controller)에 보낼 데이터
		<form action="서버url" method="get/post">
			<input name="요청key" value="요청value">
			<input type="submit">
		</form>
- 모델 처리
	컨트롤러에서 addAttribute를 사용해 모델에 데이터를 입력하고 view 단으로 출력한다.
	@RequestMapping("boardInsert.do")
	public String boardInsert(Board ins, Model d){
		service.insertBoard(ins);
		d.addAttribute("isInsert","Y");
		return "WEB-INF\\views\\a02_boardInsert.jsp";
	}

2. 스프링에서 화면과 함께 하는 MVC의 전체적인 흐름을 핵심 코드 위주로 설명하세요.
흐름: 컨트롤러 > 서비스 > dao > 서비스 > 컨트롤러 > 뷰

- 화면
값 입력을 위한 form 선언 및 요청값 설정
<form id="frm01" class="form"  method="post">
       <input class="form-control mr-sm-2" name="subject" placeholder="제목"
       		  value="${board.subject}"/>
       <input class="form-control mr-sm-2" name="writer" placeholder="작성자"
        	  value="${board.writer}"/> 
 </form>
- DB 처리 (sql, vo, dao, mapper)
- 컨트롤러
@RequestMapping("boardList.do")
	public String boardList(Board sch, Model d) {
		// Board sch: 요청값을 받아서 service단에 전달
		// 서비스에서 받아온 ArrayList<Board> 객체를 blist라는
		// 모델명으로 view 단에 넘길 준비
		d.addAttribute("blist", service.boardList(sch));			
		return "WEB-INF\\views\\a01_boardList.jsp";
	}
- 서비스
public class BoardService {
	@Autowired(required=false)
	private BoardDao dao;
	public List<Board> boardList(Board sch){
		// 요청값을 넘기고, 객체(ArrayList<Board>)를 받음
		return dao.boardList(sch);
	}
- dao (인터페이스)
public List<Board> boardList(Board sch);

3. 현재 만들어진 dao(DaoExp01)를 기준으로 화면을 만들어 요청값과 모델 데이터를 처리하세요
        	 1) 사원번호로 상세 사원정보 검색
         	 2) 직책으로 평균 급여 검색
         	 3) 부서번호를 기준으로 부서번호와 최고 급여 출력
         	 
         	 
/*직책별 평균 급여 정보(직책, 급여) sql */
SELECT job, avg(sal)
FROM emp
GROUP BY job;

- controller
// http://localhost:7080/springweb/JobAvg.do
	@RequestMapping("JobAvg.do")
	public String getJobAvg(String job, Model d){
		System.out.println("요청값:"+job);
		d.addAttribute("avgList", service.getJobAvg(job));
		return "WEB-INF\\views\\a02_mvc\\a03_jobAvgSearch.jsp";
	}
	
- jsp
<c:forEach var="emp" items="${avgList}">
   <tr><td>${emp.job}</td><td>${emp.avgsal}</td>
</c:forEach>


/*사원번호로 사원 상세정보 sql*/
SELECT *
FROM emp
WHERE empno = '7566';

- controller 
// http://localhost:7080/springweb/empDetail.do
	@RequestMapping("empDetail.do")
	public String getDetail(@RequestParam(value="empno", defaultValue="0") int empno, Model d){
		System.out.println("요청값:"+empno);
		d.addAttribute("detailList", service.getDetail(empno));
		return "WEB-INF\\views\\a02_mvc\\a04_empnoSearch.jsp";
	}

- jsp
<tr><td>${detailList.empno}</td><td>${detailList.ename}</td>
<td>${detailList.job}</td><td>${detailList.sal}</td>
<td>${detailList.deptno}</td>

/*부서번호를 기준으로 부서번호와 최고 급여 출력 sql*/
SELECT deptno, max(sal)
FROM emp
GROUP BY deptno;

- controller
// http://localhost:7080/springweb/deptMSal.do
	@RequestMapping("deptMSal.do")
	public String getDeptMaxSal(@RequestParam(value="deptno", defaultValue="0") int deptno, Model d){
		System.out.println("요청값:"+deptno);
		d.addAttribute("deptMsalList", service.getDeptMaxSal(deptno));
		return "WEB-INF\\views\\a02_mvc\\a05_deptMaxSalSearch.jsp";
	}
         	 
- jsp         	 
<tr><td>${deptMsalList.deptno}</td><td>${deptMsalList.maxsal}</td>   	 
         	 
         	 
         	 