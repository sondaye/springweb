2022-07-11
1. mybatis와 단일 매개변수와 다중매개변수를 처리하는 방식을 기술하세요.
단일: <select id="getDetail" resultType="emp" parameterType="int"> 처럼 mapper에 인터페이스에 작성한 매개변수와 일치하게 parameterType을 입력한다.
다중: 객체나 map을 활용해 매개변수로 사용한다.

2. map으로 매개변수 처리할 때, Map의 기본 기능과 mybatis에서 처리하는 방식을 기술하세요.
map은 key=value로 값을 가져올 수 있다. mybatis에 기본적으로 내장되어있다.
-mapper
	<select id="getEmpList2" resultType="emp" parameterType="hashMap">

-service
	Map<String, String> schMap = new HashMap<String, String>();
	schMap.put("ename","A");
	schMap.put("job","MAN");
	List<Emp> emplist2 = dao2.getEmpList2(schMap);
	System.out.println("사원정보조회(Map활용): "+emplist2.size());
			
3. mybatis에서 조건절 처리에 대한 기본 형식을 기술하세요.
	<if test="ename !=null">			// # ename이 null일 때 처리(에러 방지)
	and ename like '%'||#{ename}||'%'  
	</if>
	<if test="job != null">
	and job like '%' || #{job} ||'%'
	</if>

4. 아래의 sql을 mybatis를 활용하여 처리하세요.
      1) 직책을 입력하여 직책의 평균급여를 직책과 함께 데이터 가져옮
      	- sql
      		SELECT job, round(avg(sal)) 
      		FROM emp 
      		WHERE job='SALESMAN'
      		GROUP BY job;
      	- vo: Emp
      	- dao
      		public Emp getAvgSalJob(String job);
      	- mapper
	      	<select id="getAvgSalJob" resultType="emp" parameterType="string">
		      	select job, round(avg(sal)) sal
		      	from emp
		      	where job = #{job}
		      	group by job
	      	</select>
	    - service
	    	Emp jobEmp = dao2.getAvgSalJob("SALESMAN");
	    	if(jobEmp!=null){
	    		System.out.println(jobEmp.getEmpno()+": "+jobEmp.getEname());
			}
			
      2) 급여의 범위(시작/마지막)을 지정하여 사원 정보를 가져오기
      	# map? vo?: vo는 이후에 재활용이 가능하거나 테이블에 mapping되는 property인 경우 사용하고
      				그 외에는 map을 사용한다.
      	- sql
      		SELECT *
      		FROM emp
      		WHERE sal BETWEEN #{start} AND #{end}
      	- dao
      		public List<Emp> getSalSch(Map map);
      	- mapper
	      	<select id="getSalSch" resultType="emp" parameterType="hashMap">
				SELECT *
				FROM emp01
				WHERE sal BETWEEN #{sal1} AND #{sal2}
			</select>
		- service
			Map<String, Double> salmap = new HashMap<String, Double> 		// key는 string, 데이터는 double
      		salmap.put("start",1000);
      		salmap.put("end",3000);
      		System.out.println("검색된 사원 건수(1000~3000): "+dao2.getSalSch(salmap).size());
      		
      3) salgrade테이블의 정보를 입력 처리
      	- sql
      		insert into salgrade values(#{grade}, #{losal}, #{hisal})
      	- vo
      		class Salgrade{
      			private int grade;
      			private double losal;
      			private double hisal;
      		}
      	- dao
      		public void insertSalgrade(Salgrade ins);
      	- 공통 mybatis에 salgrade 등록
      		<typeAlias alias="salgrade" type="springweb.a02_mvc.a04_vo.Salgrade"/>
      	- mapper
	      	<insert id="insertSalgrade" parameterType="salgrade">
				insert into salgrade01 values(#{grade},#{losal},#{hisal}) 
			</insert>
		- service
			dao2.insertSalgrade(new Salgrade(7,5001,6000);